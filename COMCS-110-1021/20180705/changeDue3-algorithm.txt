COMSC-110
Teacher

1. Objective:  calculate change due in a transaction using these U.S. bills – no cents: $1, $2, $5, $10, $20, $50, $100, $500, $1000, $5000, $10000, and $100000 bills.

2. Requirements:
--INPUT: 
amountOwed = set amount by author
cashPaid = set amount by author
amountOwed is always less than cashPaid.
cashPaid cannot be zero or negative.

--PROCESSING: 
The paid out bills should include the fewest number of bills. For example, do not include two $10 bills when you can include one $20 bill instead. 
totalChangeDue = cashPaid - amountOwed
changeDue = totalChangeDue
creat change.txt
input amountowed
input cashpaid
thousand100 = changeDue / 100000
changeDue = remainder from changeDue / 100000
thousand10 = changeDue /10000
changeDue = remainder from changeDue / 10000
thousand5 = changeDue / 5000
changeDue = remainder from changeDue / 5000
thousand = changeDue / 1000
changeDue = remainder from changeDue / 1000
hundred5 = changeDue / 500
changeDue = remainder from changeDue / 500
hundred = changeDue /100
changeDue = remainder from changeDue / 100
fifty = changeDue / 50
changeDue = remainder from changeDue / 50
twenty = changeDue / 20
changeDue = remainder from changeDue / 20
ten = changeDue / 10
changeDue = remainder from changeDue / 10
five = changeDue / 5
changeDue = remainder from changeDue / 5
one = changeDue



--OUTPUT:
objective
author 
user instructions: "set the amount owed and the cash paid amounts to calculate change due in all specified U.S. bills."
label1: "amount owed: " 
amountOwed
label2: "amount cash paid: "
cashPaid
label3: "Change due: "
totalChangeDue
label4: "Change paid out in: "
label5: "this many $100,000 bills: "
thousand100
label6: "this many $10,000 bills: "
thousand10
label7: "this many $5,000 bills: "
thousand5
label8: "this many $1,000 bills: "
thousand
label9: "this many $500 bills: "
hundred5
label10: "this many $100 bills: "
hundred
label11: "this many $50 bills: "
fifty
label12: "this many $20 bills: "
twenty
label13: "this many $10 bills: "
ten
label14: "this many $5 bills: "
five
label15: "this many $2 bills: "
two
label16: "this many $1 bills: "
one

--DATA:
amountOwed-->>amount owed (integer)
cashPaid-->>amount tendered to pay for the amount owed (integer)
change.txt as file name
totalChangeDue-->>the difference between amountOwed and cashPaid (integer)
changeDue-->>change due for each value of bills (integer)
thousand100-->>number of $100000 bills (integer)
thousand10-->>number of $10000 bills (integer)
thousand5-->>number of $5000 bills (integer)
thousand-->>number of $1000 bills (integer)
hundred5-->>number of $500 bills (integer)
hundred-->>number of $100 bills (integer)
fifty-->>number of $50 bills (integer)
twenty-->>number of $20 bills (integer)
ten-->>number of $10 bills (integer)
five-->>number of $5 bills (integer)
two-->>number of $2 bills (integer)
one-->>number of $1 bills (integer)


3. Algorithm Instructions
10 output objective
20 output author
30 output user instructions
31 input from file
40 output amountdue
45 output cashpaid
50 output changedue
55 input amountowed on line 1
56 input cashpaid on line 2
60 ask user to check change.txt file

4. Test cases
Test Case #1: amount 1000 paid 5000 changedue 4000
10 output changedue
20 output kunming zhu
30 output user instructions
31 file
60 Amount owed: 1000 Cash paid: 5000 Total change due: 4000





test cases#2; amount 44,999 paid 50,000 change due: 5,001

10 output changedue

20 output kunming zhu

30 output user instructions

31 file
60 Amount owed:44999 Cash paid: 50000 Total change due: 5001